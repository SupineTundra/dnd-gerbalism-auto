import streamlit as st
from random import randint
import requests

st.set_page_config(
    page_title="–ì–µ—Ä–±–∞–ª–∏–∑–º",
    page_icon="üå±",
)
st.header("üå± –ì–µ—Ä–±–∞–ª–∏–∑–º")
if (st.button("–ö–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞")):
    st.write("–ò–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –ì–µ—Ä–±–∞–ª–∏–∑–º–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç—å—é 15")
    st.write("–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ì–µ—Ä–±–∞–ª–∏–∑–º–∞ = **–ú–î–† / –ò–ù–¢ + –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å**, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–±–æ—Ä –ì–µ—Ä–±–∞–ª–∏—Å—Ç–∞.")
    st.write("–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω–æ–π –¥–æ–±—ã—á–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –î–ú–æ–º, –±—Ä–æ—Å–∫–æ–º –∫—É–±–∏–∫–∞ 1d4 –∫–∞–∫ –º–Ω–æ–≥–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –¥–æ–±—ã–ª –∏–≥—Ä–æ–∫ –≤ —ç—Ç–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞–º–∏.")

TERRAIN_ROLL_TABLES_URL = "https://raw.githubusercontent.com/Zendelll/dnd-gerbalism-auto/master/terrain_roll_tables.json"
PLANTS_TABLE_URL = "https://raw.githubusercontent.com/Zendelll/dnd-gerbalism-auto/master/plants_table.json"
COMMON_TERRAIN_NAME = "–û–±—ã—á–Ω—ã–µ"

TERRAIN_ROLL_TABLES = requests.get(TERRAIN_ROLL_TABLES_URL).json()
PLANTS_TABLE = requests.get(PLANTS_TABLE_URL).json()

def roll(dice):
    "dice - —Å—Ç—Ä–æ–∫–∞ —Ç–∏–ø–∞ \"8d12\", –≥–¥–µ 8 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–π—Å–æ–≤, –∞ 12 - —Ç–∏–ø"
    dice = dice.split("d")
    result = 0
    for i in range(1, int(dice[0])+1):
        result += randint(1, int(dice[1]))
    return str(result)


def terrain_selector(tables_dict):
    terrain_names = []
    for name, table in tables_dict.items():
        if name != COMMON_TERRAIN_NAME:
            terrain_names.append(name)
    return st.selectbox('–ú–µ—Å—Ç–Ω–æ—Å—Ç—å', terrain_names)

def roll_for_plant(selected_terrain):
    roll_result = int(roll("2d6"))
    #–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –≤–æ–¥–∞ –Ω–∞ 2-4 –∏–ª–∏ 10-12 –ø—Ä–∏ 76+ –Ω–∞ d100
    if ((roll_result >= 2 and roll_result <= 4) or (roll_result >= 10 and roll_result <= 12)) and int(roll("1d100")) > 75:
        return "–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –≤–æ–¥–∞".split(", ")

    plant_name = TERRAIN_ROLL_TABLES[selected_terrain][str(roll_result)]
    if plant_name == COMMON_TERRAIN_NAME:
        plant_name = TERRAIN_ROLL_TABLES[COMMON_TERRAIN_NAME][roll("2d6")]
    return plant_name.split(", ")

def write_plant(plant_name_splited):
    #1 - –Ω–∞–∑–≤–∞–Ω–∏–µ, 2 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, 3 - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if len(plant_name_splited) > 1:
        quantity = plant_name_splited[1].split("-")
        if len(quantity) > 1:
            quantity = randint(int(quantity[0]), int(quantity[1]))
        else:
            quantity = quantity[0]
        st.success(f"{plant_name_splited[0]} {quantity}—à—Ç")
        if len(plant_name_splited) > 2:
            st.text(plant_name_splited[2])
    else:
        st.success(plant_name_splited[0])

def write_plant_other_description(plant_name_splited, plants_db):
    if (plant_name_splited[0] in plants_db):
        plant = PLANTS_TABLE[plant_name_splited[0]]
        st.header("–û–ø–∏—Å–∞–Ω–∏–µ")
        st.write(plant["description"])
        st.header("–≠—Ñ—Ñ–µ–∫—Ç")
        st.write(plant["effect"])
        st.write(f'–°–ª–æ–∂–Ω–æ—Å—Ç—å - {plant["difficulty"]}')
        st.write(f'–†–µ–¥–∫–æ—Å—Ç—å - {plant["rarity"]}')
        st.write(f'–ú–µ—Å—Ç–Ω–æ—Å—Ç–∏ - {plant["terrain"]}')



if __name__ == "__main__":
    selected_terrain = terrain_selector(TERRAIN_ROLL_TABLES)
    roll_button = st.button("–†–æ–ª–ª!")

    if roll_button:
        plant_name = roll_for_plant(selected_terrain)
        write_plant(plant_name)
        write_plant_other_description(plant_name, PLANTS_TABLE)



    
    
    

